swagger: "2.0"
info:
  version: "1.0.0-rc.2"
  title: "Object Storage's API Docs"
  contact:
    email: "diazharizky@gmail.com"
tags:
  - name: "bucket"
    description: "Bucket's features and functions"
  - name: "object"
    description: "Object's features and functions"
schemes:
  - "http"
paths:
  /buckets/{bucket_id}:
    post:
      tags:
        - "bucket"
      summary: "Create bucket with specified ID"
      produces:
        - "application/json"
      parameters:
        - name: "bucket_id"
          in: "path"
          required: true
          type: "string"
      responses:
        201:
          description: "Bucket created"
        400:
          description: "Bucket already exists"
        500:
          description: "Internal server error"
  /buckets/{bucket_id}/policy:
    get:
      tags:
        - "bucket"
      summary: "Get bucket's policy with specified ID"
      produces:
        - "application/json"
      parameters:
        - name: "bucket_id"
          in: "path"
          required: true
          type: "string"
      responses:
        200:
          description: "Bucket's policy retrieved"
        400:
          description: "Bucket already exists"
        500:
          description: "Internal server error"
    post:
      tags:
        - "bucket"
      summary: "Create/update bucket's policy with specified ID"
      produces:
        - "application/json"
      parameters:
        - name: "bucket_id"
          in: "path"
          required: true
          type: "string"
        - name: "body"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/PolicyPayload"
      responses:
        204:
          description: "Bucket's policy updated"
        400:
          description: "Bucket already exists"
        500:
          description: "Internal server error"
  /buckets/{bucket_id}/objects:
    get:
      tags:
        - "object"
      summary: "Retrieve object list from specified bucket"
      parameters:
        - name: "bucket_id"
          in: "path"
          required: true
          type: "string"
        - name: "prefix"
          in: "query"
          required: false
          type: "string"
      responses:
        200:
          description: "Success"
        404:
          description: "Bucket not found"
        500:
          description: "Internal server error"
  /buckets/{bucket_id}/objects/{object_id}:
    get:
      tags:
        - "object"
      summary: "Retrieve specified object from specified bucket"
      produces:
        - "application/octet-stream"
      parameters:
        - name: "bucket_id"
          in: "path"
          required: true
          type: "string"
        - name: "object_id"
          in: "path"
          required: true
          type: "string"
        - name: "prefix"
          in: "query"
          required: false
          type: "string"
        - name: "type"
          in: "query"
          required: false
          type: "string"
          description: "The content type of response data"
      responses:
        200:
          description: "Success"
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        404:
          description: "Bucket not found"
        500:
          description: "Internal server error"
    post:
      tags:
        - "object"
      summary: "Store specified object to specified bucket"
      consumes:
        - "multipart/form-data"
      parameters:
        - name: "bucket_id"
          in: "path"
          required: true
          type: "string"
        - name: "object_id"
          in: "path"
          required: true
          type: "string"
        - name: "object"
          in: "formData"
          required: true
          type: "file"
        - name: "prefix"
          in: "query"
          required: false
          type: "string"
      responses:
        200:
          description: "Object stored"
        404:
          description: "Bucket not found"
        500:
          description: "Internal server error"
definitions:
  PolicyPayload:
    type: "object"
    properties:
      policy:
        type: "object"
        properties:
          Version:
            type: string
          Statement:
            type: array
            items:
              $ref: "#/definitions/StatementItem"
  StatementItem:
    type: object
    properties:
      Effect:
        type: "string"
      Principal:
        type: "object"
        properties:
          prop1:
            type: "array"
            items:
              type: "string"
          prop2:
            items:
              type: "string"
      Action:
        type: "array"
        items:
          type: string
      Resource:
        type: "array"
        items:
          type: string
